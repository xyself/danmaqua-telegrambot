name: 构建并推送Docker镜像

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: {}   # 添加手动触发

env:
  # 设置DockerHub账户名（需要替换为你的DockerHub用户名）
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  # 镜像名称
  IMAGE_NAME: danmaqua-telegrambot

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'  # 选择你需要的Node.js版本

      - name: 生成完整的 package.json
        run: |
          cat << 'EOF' > package.json
          {
            "name": "danmaqua-telegrambot",
            "version": "1.0.0",
            "description": "一个用于将直播弹幕转发到Telegram的机器人",
            "main": "index.js",
            "scripts": {
              "start": "node index.js",
              "dev": "nodemon index.js",
              "test": "echo \"Error: no test specified\" && exit 1"
            },
            "keywords": [
              "telegram",
              "bot",
              "bilibili",
              "danmaku"
            ],
            "author": "",
            "license": "MIT",
            "dependencies": {
              "async-ratelimiter": "^1.3.13",
              "blivedmjs": "^1.1.0",
              "debug": "^4.3.5",
              "dotenv": "^16.4.7",
              "douyudm": "^2.1.1",
              "https-proxy-agent": "^7.0.6",
              "ioredis": "^5.6.0",
              "log4js": "^6.9.1",
              "node-cron": "^3.0.3",
              "socket.io": "^4.8.1",
              "socket.io-client": "^4.8.1",
              "telegraf": "^4.15.5",
              "winston": "^3.13.0",
              "winston-daily-rotate-file": "^5.0.0"
            },
            "devDependencies": {
              "nodemon": "^3.1.0"
            },
            "engines": {
              "node": ">=23.0.0"
            }
          }
          EOF

      - name: 安装依赖
        run: npm install


      - name: 提交更改到GitHub
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git diff --cached --quiet || git commit -m "创建完整的 package.json 和 package-lock.json"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub提供的token进行身份验证

      - name: 登录到DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 提取元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            latest

      - name: 构建并推送
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
